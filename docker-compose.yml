version: "3.8"
services:
  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.1
    restart: unless-stopped
    volumes:
      - logstash-data:/usr/share/logstash/data
      - ./.docker/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearchMock
    healthcheck:
      test:
        - "CMD"
        - "bash"
        - "-c"
        - 'curl -Ss localhost:9600 | grep -o ''"status":"[a-z]*"'' | awk -F'':'' ''{print $2}'' | grep -q "green" || exit 1'
      interval: 30s
      timeout: 10s
      retries: 8
    ports:
      - ${LOGSTASH_PORT:-5044}:5044
      - ${LOGSTASH_STATS_PORT:-9600}:9600
  prometheus:
    image: prom/prometheus:v2.42.0
    restart: unless-stopped
    volumes:
      - prometheus-data:/prometheus
      - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
    environment:
      - PROMETHEUS_PORT=${PROMETHEUS_PORT:-9090}
    ports:
      - ${PROMETHEUS_PORT:-9090}:9090
    healthcheck:
      test:
        - "CMD"
        - "sh"
        - "-c"
        - "wget --no-verbose --tries=1 --spider http://localhost:9090 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 8
  elasticsearchMock:
    image: httpd:2.4
    restart: unless-stopped
    ports:
      - ${ELASTICSEARCH_PORT:-9200}:9200
    command: ["httpd-foreground"]
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "-f"
        - "http://localhost:9200"
      interval: 30s
      timeout: 10s
      retries: 8
  exporter:
    build:
      context: .
      dockerfile: Dockerfile.dev
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "localhost:9198/healthcheck"
        - "-f"
      interval: 30s
      timeout: 10s
      retries: 8
    volumes:
      - .:/app
    restart: unless-stopped
    environment:
      - LOGSTASH_URL=${LOGSTASH_URL:-http://logstash:9600}
    ports:
      - ${EXPORTER_PORT:-9198}:9198
volumes:
  logstash-data:
  prometheus-data:
  elasticsearch-data:
  elasticsearch-logs:
