name: Go application CI/CD

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master

env:
  GOLANGCI_LINT_VERSION: v1.51.1
  TAG_NAME: "${GITHUB_REF##*/}"

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin ${GOLANGCI_LINT_VERSION}

      - name: Lint code
        run: golangci-lint run

  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test code
        run: go test ./...

  build-linux:
    runs-on: ubuntu-20.04
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Linux binary
        run: make build-linux

      - name: Upload Linux binary
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v1
        with:
          name: linux-binary-${{ env.TAG_NAME }}.tar.gz
          path: out/main

  build-mac:
    runs-on: macos-latest
    needs: [lint, test]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Mac binary
        run: make build-mac

      - name: Upload Mac binary
        uses: actions/upload-artifact@v1
        with:
          name: mac-binary-${{ env.TAG_NAME }}.tar.gz
          path: out/main

  build-windows:
    runs-on: windows-latest
    needs: [lint, test]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Windows binary
        run: make build-windows

      - name: Upload Windows binary
        uses: actions/upload-artifact@v1
        with:
          name: windows-binary-${{ env.TAG_NAME }}.tar.gz
          path: out/main
